# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1

commands: # a reusable command with parameters
   print_pipeline_id:
      steps:
         - run: echo $CIRCLE_WORKFLOW_ID
jobs:
  print_hello:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run: echo "hello"

  print_world:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run: echo "world"
      
  print_env_var:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run: echo $TEST_VARIABLE

  print_hello_world_to_file:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run: mkdir -p /tmp/workspace
      - run: echo "Hello from the first job" >> /tmp/workspace/output.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - output.txt

  read_hello_world_from_file:
    docker:
      - image: cimg/base:2020.01
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: cat /tmp/workspace/output.txt

  print_pipeline_id_job:
    docker:
      - image: cimg/base:2020.01
    steps:
      - print_pipeline_id

  job_will_fail:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run: foo this will faill
      - run: 
          name: Run after failure
          command: echo "I am running after failed job"
          when: on_fail

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - job_will_fail


